(set-logic QF_LIA)

; The output of Delay is initially in [0,10] and
; then is the previous input
(define-system Delay
  :input ((in Int))
  :output ((out Int))
  :init (<= 0 out 10) ; more than one possible initial output
  :trans (= out' in) ; the new output is the old input
)

; A clocked lossless channel, stuttering when clock is false
(define-system StutteringClocked
  :input ((clock Bool) (in Int))
  :output ((out Int))
  :init (=> clock (= out in)) ; out is arbitrary when clock is false
  :trans (ite clock' (= out' in') (= out' out))
)

(define-system Observer
  :input ((clock Bool) (in Int))
  :output ((out Int))
  :local ((old_out Int) (step Int))
  :init (= step 0)
  :trans (and
    (= old_out' out)
    (= step' (+ step 1))
  )
  :subsys (SC (StutteringClocked clock in out))
)

(check-system Observer
  :input ((clock Bool) (in Int))
  :output ((out Int))
  :local ((old_out Int) (step Int))
  ;             Can the clock not stutter when it should stutter?
  :reachable (r (and (> step 0) (= clock false) (distinct out old_out)))
  :query (query1 (r))
)